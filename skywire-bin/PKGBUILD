# Maintainer: Moses Narrow <moe_narrow@use.startmail.com>
# Maintainer: Rudi [KittyCash] <rudi@skycoinmail.com>
_projectname=skycoin
_pkgarch=amd64
pkgname=skywire-bin
_pkgname=skywire
_pkgname1=skywire-mainnet
_githuborg=SkycoinProject
pkgdesc="Skywire: Building a New Internet. Skycoin.com"
_pkgver1='0.2.3'
_tag_ver='v0.2.3'
pkgver=${_pkgver1//-/.}
_pkggopath="github.com/${_githuborg}/${_pkgname1}"
pkgrel=2
arch=('any')
url="https://${_pkggopath}"
license=()
makedepends=(git skycoin-keyring)
depends=()
_debdeps="reprepro"
provides=(skywire)
_release_url=("${url}/releases/download/${_tag_ver}/${_pkgname}-${_tag_ver}")
source=("${_release_url}-linux-${_pkgarch}.tar.gz"
"postinst.sh"
'skywire-hypervisor.service'
'skywire-visor.service'
'certificate.cnf'
'generate.sh'
'readonlycache.go')
sha256sums=('985711605361caf7ddd24e82a632d56cfb33252afbc5e1740a54c4db7048a455'
            'a09bef654583c2b3d1fbfdb0647e713dc5ede6bb5675293b51b7b3164ef863b8'
            '99a01866a21a02b7c972262cb054da718419d4e8d37dcd36cefbb5b17d877867'
            'd891297b28463e9ac8f765a95fc1d0488b51d01f47692a7aa62a3ac0baa443ac'
            'eafd78dd0cc9875eabac1017478d4f06361abf2021bd94ad052056284f7bb3d9'
            '7c7e7713c14a949f44faac18c3badee87e3c99987aaaa28a6ebef5022dd13f86'
            'a44f65d1d3b218512556d8a4a44fbe9c65f4d64cc699859157aa9568cee5422e')

[[ $_pkgarch == "amd64" ]] && _buildwith=(env GOOS=linux GOARCH=amd64)
[[ $_pkgarch == "arm64" ]] && _buildwith=(env GOOS=linux GOARCH=arm64)
[[ $_pkgarch == "armhf" ]] && _buildwith=(env GOOS=linux GOARCH=arm GOARM=6)

build() {
#fix name of hypervisor binary
mv hypervisor ${_pkgname}-hypervisor

#create read only cache binary
#export GOOS=linux
#export GOARCH=arm64
${_buildwith} go build readonlycache.go

#create control file for the debian package
echo "Package: skywire" > ${srcdir}/control
echo "Version: ${pkgver}-${pkgrel}" >> ${srcdir}/control
echo "Priority: optional" >> ${srcdir}/control
echo "Section: web" >> ${srcdir}/control
echo "Architecture: ${_pkgarch}" >> ${srcdir}/control
echo "Depends: ${_debdeps}" >> ${srcdir}/control
echo "Maintainer: Skyfleet" >> ${srcdir}/control
echo "Description: ${pkgdesc}" >> ${srcdir}/control

}

package() {
#set up to create a .deb package
_debpkgdir=${_pkgname}-${pkgver}-${pkgrel}-${_pkgarch}
_pkgdir=${pkgdir}/${_debpkgdir}

#install skywire binaries
msg2 'installing binaries'
install -Dm755 ${srcdir}/${_pkgname}-hypervisor ${_pkgdir}/usr/bin/${_pkgname}-hypervisor
install -Dm755 ${srcdir}/${_pkgname}-visor ${_pkgdir}/usr/bin/${_pkgname}-visor
install -Dm755 ${srcdir}/${_pkgname}-cli ${_pkgdir}/usr/bin/${_pkgname}-cli
_skywireapps=$( ls ${srcdir}/apps )
for i in ${_skywireapps}; do
  install -Dm755 ${srcdir}/apps/${i} ${_pkgdir}/usr/bin/apps/${i}
done

#install the system.d services
install -Dm644 ${srcdir}/${_pkgname}-hypervisor.service ${_pkgdir}/etc/systemd/system/${_pkgname}-hypervisor.service
install -Dm644 ${srcdir}/${_pkgname}-visor.service ${_pkgdir}/etc/systemd/system/${_pkgname}-visor.service

#tls key and certificate generation
install -Dm755 ${srcdir}/generate.sh ${_pkgdir}/usr/lib/skycoin/skywire/ssl/generate.sh
ln -rTsf ${_pkgdir}/usr/lib/skycoin/skywire/ssl/generate.sh ${_pkgdir}/usr/bin/skywire-tls-gen
install -Dm644 ${srcdir}/certificate.cnf ${_pkgdir}/usr/lib/skycoin/skywire/ssl/certificate.cnf

#install the readonly-cache binary
install -Dm755 ${srcdir}/readonlycache ${_pkgdir}/usr/bin/readonlycache

#install the control file and postinst script for the debian package
install -Dm755 ${srcdir}/control ${_pkgdir}/DEBIAN/control
install -Dm755 ${srcdir}/postinst.sh ${_pkgdir}/DEBIAN/postinst

#create the debian package
cd $pkgdir
dpkg-deb --build ${_debpkgdir}
mv *.deb ../../
#exit so the arch package doesn't get built
exit
}
